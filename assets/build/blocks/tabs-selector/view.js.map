{"version":3,"file":"tabs-selector/view.js","mappings":";;;;;AAAA;AACA;AACA;AACA,MAAMA,YAAY,GAAG;EAEpB;AACD;AACA;AACA;AACA;EACCC,IAAIA,CAAA,EAAG;IACN,IAAI,CAACC,cAAc,GAAG,IAAI,CAACA,cAAc,CAACC,IAAI,CAAE,IAAK,CAAC;IACtD,IAAI,CAACC,UAAU,GAAG,IAAI,CAACA,UAAU,CAACD,IAAI,CAAE,IAAK,CAAC;IAE9C,IAAI,CAACE,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAE,wCAAyC,CAAC;IAEtF,IAAK,CAAE,IAAI,CAACF,YAAY,EAAG;MAC1B;IACD;IAEA,MAAMG,YAAY,GAAG,IAAI,CAACH,YAAY,EAAEI,OAAO,EAAED,YAAY,IAAI,WAAW;IAE5E,IAAK,WAAW,KAAKA,YAAY,EAAG;MACnC,IAAI,CAACN,cAAc,CAAC,CAAC;IACtB,CAAC,MAAM;MACN,IAAI,CAACE,UAAU,CAAC,CAAC;IAClB;EACD,CAAC;EAED;AACD;AACA;AACA;AACA;EACCF,cAAcA,CAAA,EAAG;IAChB,MAAMQ,mBAAmB,GAAG,IAAI,CAACL,YAAY,CAACE,aAAa,CAAE,gBAAiB,CAAC;IAE/E,IAAK,CAAEG,mBAAmB,EAAG;MAC5B;IACD;IAEAA,mBAAmB,CAACC,gBAAgB,CAAE,QAAQ,EAAE,MAAM;MACrD;MACA,MAAMC,WAAW,GAAG,IAAIC,WAAW,CAAE,WAAW,EAAE;QACjDC,MAAM,EAAE;UACPC,KAAK,EAAEL,mBAAmB,CAACK;QAC5B;MACD,CAAE,CAAC;MAEH,IAAI,CAACV,YAAY,CAACW,aAAa,CAAEJ,WAAY,CAAC;IAC/C,CAAE,CAAC;EACJ,CAAC;EAED;AACD;AACA;AACA;AACA;EACCR,UAAUA,CAAA,EAAG;IACZ,MAAMa,OAAO,GAAG,IAAI,CAACZ,YAAY,CAACE,aAAa,CAAE,qBAAsB,CAAC;IAExE,IAAK,CAAEU,OAAO,EAAG;MAChB;IACD;IAEA,MAAMC,UAAU,GAAGD,OAAO,CAACE,gBAAgB,CAAE,QAAS,CAAC;IAEvD,IAAK,CAAED,UAAU,EAAG;MACnB;IACD;IAEAA,UAAU,CAACE,OAAO,CAAIC,SAAS,IAAM;MACpCA,SAAS,CAACV,gBAAgB,CAAE,OAAO,EAAE,MAAM;QAC1C;QACA,MAAMC,WAAW,GAAG,IAAIC,WAAW,CAAE,WAAW,EAAE;UACjDC,MAAM,EAAE;YACPC,KAAK,EAAEM,SAAS,CAACZ,OAAO,CAACa;UAC1B;QACD,CAAE,CAAC;QAEH,IAAI,CAACjB,YAAY,CAACW,aAAa,CAAEJ,WAAY,CAAC;MAC/C,CAAE,CAAC;IACJ,CAAE,CAAC;EACJ;AACD,CAAC;AAED,CACC,MAAM;EACLN,QAAQ,CAACK,gBAAgB,CAAE,kBAAkB,EAAE,MAAM;IACpDX,YAAY,CAACC,IAAI,CAAC,CAAC;EACpB,CAAE,CAAC;AACJ,CAAC,EACA,CAAC,C","sources":["webpack://decoupled-tabs/./assets/src/blocks/tabs-selector/view.js"],"sourcesContent":["/**\n * Tabs selector view script.\n */\nconst TabsSelector = {\n\n\t/**\n\t * Initialize the Tabs Selector.\n\t *\n\t * @return {void}\n\t */\n\tinit() {\n\t\tthis.handleDropDown = this.handleDropDown.bind( this );\n\t\tthis.handleList = this.handleList.bind( this );\n\n\t\tthis.tabsSelector = document.querySelector( '.wp-block-decoupled-tabs-tabs-selector' );\n\n\t\tif ( ! this.tabsSelector ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selectorType = this.tabsSelector?.dataset?.selectorType || 'drop-down';\n\n\t\tif ( 'drop-down' === selectorType ) {\n\t\t\tthis.handleDropDown();\n\t\t} else {\n\t\t\tthis.handleList();\n\t\t}\n\t},\n\n\t/**\n\t * Handle Drop Down tabs selector.\n\t *\n\t * @return {void}\n\t */\n\thandleDropDown() {\n\t\tconst tabsSelectorControl = this.tabsSelector.querySelector( '#tabs-selector' );\n\n\t\tif ( ! tabsSelectorControl ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttabsSelectorControl.addEventListener( 'change', () => {\n\t\t\t// Creating custom event so all other component can listen to this event\n\t\t\tconst customEvent = new CustomEvent( 'tabChange', {\n\t\t\t\tdetail: {\n\t\t\t\t\tvalue: tabsSelectorControl.value,\n\t\t\t\t},\n\t\t\t} );\n\n\t\t\tthis.tabsSelector.dispatchEvent( customEvent );\n\t\t} );\n\t},\n\n\t/**\n\t * Handle List tab selector.\n\t *\n\t * @return {void}\n\t */\n\thandleList() {\n\t\tconst tabList = this.tabsSelector.querySelector( '.tabs-selector-list' );\n\n\t\tif ( ! tabList ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst tabButtons = tabList.querySelectorAll( 'button' );\n\n\t\tif ( ! tabButtons ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttabButtons.forEach( ( tabButton ) => {\n\t\t\ttabButton.addEventListener( 'click', () => {\n\t\t\t\t// Creating custom event so all other component can listen to this event\n\t\t\t\tconst customEvent = new CustomEvent( 'tabChange', {\n\t\t\t\t\tdetail: {\n\t\t\t\t\t\tvalue: tabButton.dataset.tabId,\n\t\t\t\t\t},\n\t\t\t\t} );\n\n\t\t\t\tthis.tabsSelector.dispatchEvent( customEvent );\n\t\t\t} );\n\t\t} );\n\t},\n};\n\n(\n\t() => {\n\t\tdocument.addEventListener( 'DOMContentLoaded', () => {\n\t\t\tTabsSelector.init();\n\t\t} );\n\t}\n)();\n"],"names":["TabsSelector","init","handleDropDown","bind","handleList","tabsSelector","document","querySelector","selectorType","dataset","tabsSelectorControl","addEventListener","customEvent","CustomEvent","detail","value","dispatchEvent","tabList","tabButtons","querySelectorAll","forEach","tabButton","tabId"],"sourceRoot":""}